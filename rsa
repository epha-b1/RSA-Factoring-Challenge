import sys
import math
import random

def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def pollards_rho(n):
    def f(x):
        return (x ** 2 + 1) % n
    
    x, y, d = 2, 2, 1
    while d == 1:
        x = f(x)
        y = f(f(y))
        d = gcd(abs(x - y), n)
    
    if d == n:
        return None
    else:
        return d

def is_prime(n):
    if n <= 1:
        return False
    elif n <= 3:
        return True
    elif n % 2 == 0 or n % 3 == 0:
        return False
    i = 5
    while i * i <= n:
        if n % i == 0 or n % (i + 2) == 0:
            return False
        i += 6
    return True

def factorize_rsa(n):
    factors = []
    while not is_prime(n):
        factor = pollards_rho(n)
        if factor is None:
            return None
        factors.append(factor)
        n //= factor
    factors.append(n)
    return factors

def main():
    if len(sys.argv) != 2:
        print("Usage: rsa <file>")
        return
    
    filename = sys.argv[1]
    try:
        with open(filename, 'r') as file:
            for line in file:
                num = int(line.strip())
                factors = factorize_rsa(num)
                if factors is None:
                    print("Unable to factorize:", num)
                else:
                    print("{}={}".format(num, "*".join(map(str, factors))))
    except FileNotFoundError:
        print("File not found:", filename)
    except ValueError:
        print("Invalid number in file")
    except Exception as e:
        print("An error occurred:", e)

if __name__ == "__main__":
    main()
